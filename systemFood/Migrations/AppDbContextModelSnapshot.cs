// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using systemFood.Data;

#nullable disable

namespace systemFood.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("systemFood.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "fas fa-border-all",
                            Name = "جميع الأصناف"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "fas fa-pizza-slice",
                            Name = "بيتزا"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "fas fa-utensils",
                            Name = "باستا"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "fas fa-burger",
                            Name = "وجبات سريعة"
                        },
                        new
                        {
                            Id = 5,
                            Icon = "fas fa-beer-mug-empty",
                            Name = "مشروبات"
                        },
                        new
                        {
                            Id = 6,
                            Icon = "fas fa-salad",
                            Name = "سلطات"
                        });
                });

            modelBuilder.Entity("systemFood.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescaondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DescaondNumber")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescaondName = "SUBER10",
                            DescaondNumber = 0.10000000000000001
                        },
                        new
                        {
                            Id = 2,
                            DescaondName = "SUBER20",
                            DescaondNumber = 0.20000000000000001
                        },
                        new
                        {
                            Id = 3,
                            DescaondName = "SUBER30",
                            DescaondNumber = 0.29999999999999999
                        });
                });

            modelBuilder.Entity("systemFood.Models.Extras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatogryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CatogryId");

                    b.ToTable("Extras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatogryId = 2,
                            IsSelected = false,
                            Name = "جبنة",
                            Price = 500m
                        },
                        new
                        {
                            Id = 2,
                            CatogryId = 2,
                            IsSelected = false,
                            Name = "شطة",
                            Price = 300m
                        },
                        new
                        {
                            Id = 3,
                            CatogryId = 4,
                            IsSelected = false,
                            Name = "كاتشب",
                            Price = 700m
                        },
                        new
                        {
                            Id = 4,
                            CatogryId = 2,
                            IsSelected = false,
                            Name = "زبادي مع خيار ",
                            Price = 900m
                        },
                        new
                        {
                            Id = 5,
                            CatogryId = 2,
                            IsSelected = false,
                            Name = "سلطة حاره",
                            Price = 100m
                        },
                        new
                        {
                            Id = 6,
                            CatogryId = 5,
                            IsSelected = false,
                            Name = "ثلج مكعبات",
                            Price = 100m
                        },
                        new
                        {
                            Id = 7,
                            CatogryId = 3,
                            IsSelected = false,
                            Name = "جبنة",
                            Price = 100m
                        },
                        new
                        {
                            Id = 8,
                            CatogryId = 5,
                            IsSelected = false,
                            Name = "شراح ليمون",
                            Price = 200m
                        });
                });

            modelBuilder.Entity("systemFood.Models.OrderItems", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("systemFood.Models.Orders", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("systemFood.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CompletionTime")
                        .HasColumnType("int");

                    b.Property<string>("Cover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("IsTakeaway")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("systemFood.Models.SelectExtrasProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExtraId")
                        .HasColumnType("int");

                    b.Property<int>("orderitemid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExtraId");

                    b.HasIndex("orderitemid");

                    b.ToTable("selectExtrasProduc");
                });

            modelBuilder.Entity("systemFood.Models.Extras", b =>
                {
                    b.HasOne("systemFood.Models.Category", "category")
                        .WithMany("IExtras")
                        .HasForeignKey("CatogryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("systemFood.Models.OrderItems", b =>
                {
                    b.HasOne("systemFood.Models.Orders", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("systemFood.Models.Product", "Product")
                        .WithMany("OrdersLines")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("systemFood.Models.Product", b =>
                {
                    b.HasOne("systemFood.Models.Category", "Category")
                        .WithMany("IProduct")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("systemFood.Models.SelectExtrasProduct", b =>
                {
                    b.HasOne("systemFood.Models.Extras", "Extras")
                        .WithMany()
                        .HasForeignKey("ExtraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("systemFood.Models.OrderItems", "orderitems")
                        .WithMany("selectExtra")
                        .HasForeignKey("orderitemid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Extras");

                    b.Navigation("orderitems");
                });

            modelBuilder.Entity("systemFood.Models.Category", b =>
                {
                    b.Navigation("IExtras");

                    b.Navigation("IProduct");
                });

            modelBuilder.Entity("systemFood.Models.OrderItems", b =>
                {
                    b.Navigation("selectExtra");
                });

            modelBuilder.Entity("systemFood.Models.Orders", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("systemFood.Models.Product", b =>
                {
                    b.Navigation("OrdersLines");
                });
#pragma warning restore 612, 618
        }
    }
}
